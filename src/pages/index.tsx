import { Box, Link, Text, Input, Stack, Button, RadioGroup, Radio, SimpleGrid } from '@chakra-ui/react'
import { StarIcon } from '@chakra-ui/icons'
import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import * as yup from 'yup'





import { Card } from '../components/Card'
import { useState } from 'react'
import { useForm } from "react-hook-form";

const searchSchema = yup.object().shape({
  search: yup.string().required().min(3, 'Digite pelo menos 3 caracteres.')
})


import data from '../data/lista.json';

type ResultData = {
  id: string,
  cantor: string,
  musica: string,
}
type SearchProp = {
  type: 'cantor' | 'musica',
  search: string
}
const Home: NextPage = () => {

  const { register, handleSubmit, watch, formState: { errors } } = useForm();

  const [isLoading, setIsLoading] = useState(false);
  const [results, setResults] = useState<ResultData[]>([]);


  const delay = (ms: number) => new Promise(res => setTimeout(res, ms));

  async function handleSearch({ type, search }: SearchProp) {

    setIsLoading(true);
    await delay(3000);

    console.log(type);
    setResults([]);
    if (type === 'musica') {
      console.log(search);
      const newDate = data.filter(d => d.musica.includes(search.toUpperCase()));
      setResults(newDate);
    } else {
      const newDate = data.filter(d => d.cantor.includes(search.toUpperCase()));
      setResults(newDate);
    }
    setIsLoading(false);
  }



  return (
    <Box as="main" bg="#efefef" display="flex" h="full" flex="1" flexDir='column' alignItems="center">
      <Head>
        <title>Listagens das Músicas - Karaoke do Vaguinho</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Box bg="#fff" w="90vw" h="70vh" mt={[10, 8]} roundedTop={20} p={8} display="flex" flexDir="column" justifyItems="center" alignItems="center" flex="1">
        <Stack direction="row" alignSelf="flex-end">
          <StarIcon w={6} h={6} color="yellow.500" mr={1} /> <Text fontSize="xl" color="#091C2B" >Temos um total de {data.length} músicas cadastradas.</Text>
        </Stack>

        <Box as="form" width={['250px', '300px', '600px']} onSubmit={handleSubmit(handleSearch)}>
          <Box py={4} display="flex" flexDir={['column', 'column', 'row']} alignItems="center">
            <Text fontSize="18px" mr={8}>Pesquisar Por: </Text>
            <RadioGroup defaultValue="cantor" my={[4, 4, null]}>
              <Stack spacing={5} direction={['row']}>
                <Radio value="cantor" colorScheme="green" {...register("type")}>
                  Cantor(a)
                </Radio>
                <Radio value="musica" colorScheme="red" {...register("type")}>
                  Música
                </Radio>
              </Stack>
            </RadioGroup>
          </Box>

          <Stack direction={['column', null, 'row']}>
            <Input placeholder="Digite sua busca aqui..." {...register('search')} />
            <Button type="submit" isLoading={isLoading} colorScheme="teal" bg="gray.600" loadingText="Pesquisando" spinnerPlacement="start">Pesquisar</Button>

          </Stack>

          {results.length > 0 && !isLoading && <Text>Achei um total de {results.length} registros para a pesquisa.</Text>}
        </Box>
      </Box>

      <SimpleGrid columns={[1, 2, 2, 4]} spacing={[2, 10]} py={10} px={10}>
        {isLoading && (
          <>
            <Card isLoading={isLoading} />
            <Card isLoading={isLoading} display={['none', 'none', 'block']} />
            <Card isLoading={isLoading} display={['none', 'none', 'block']} />
            <Card isLoading={isLoading} display={['none', 'none', 'block']} />
          </>
        )
        }

        {results && results.length > 0 && !isLoading && results.map(result => <Card key={result.id} type={watch('type')} isLoading={isLoading} data={result} />)}

      </SimpleGrid>

      <Box as="footer" h="100%" display="flex" alignItems="flex-end" borderTop="1px" borderTopColor="#eaeaea">
        <Link
          display='flex'
          justifyContent="center"
          alignItems="center"
          flexGrow={1}
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </Link>
      </Box>
    </Box >
  )
}

export default Home
